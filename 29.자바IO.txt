1. 입출력(I/O)을 위한 스트림(stream)
    1) 네트워크에서 자료의 흐름이 물의 흐름과 같다는 비유에서 유래됨
    2) 다양한 입출력 장치에 독립적으로 일관성있는 입출력을
       입출력 스트림을 통해 제공
        - 입출력이 구현되는 곳
            - 파일 디스크, 키보드, 마우스, 네트웍, 메모리 등
              모든 자료가 입력되고 출력되는 곳.

2. 입출력 스트림 구분
    1) 대상 기준 : 입력 스트림 / 출력 스트림
    2) 자료의 종류 : 바이트 스트림 / 문자 스트림 
    3) 기능 : 기반 스트림 / 보조 스트림 

3. 입력 스트림 / 출력 스트림  
    1) 입력 스트림
        - 대상으로부터 자료를 읽어 들이는 스트림
        - FileInputStream, FileReader, BufferedInputStream, BufferedReader  
    2) 출력 스트림
        - 대상으로 자료를 출력하는 스트림
        - FileOutputStream, FileWriter, BufferedOutputStream, BufferedWriter 

4. 바이트 스트림 / 문자 스트림
    1) 바이트 단위 스트림
        - 동영상, 음악 파일, 실행 파일 등의 자료를 읽고 쓸 때 사용.
        - FileInputStream, FileOutputStream, 
          BufferedInputStream, BufferedOutputStream
    2) 문자 단위 스트림
        - 바이트 단위로 자료를 처리하면 문자는 깨짐.
        - 인코딩에 맞게 2바이트 이상으로 처리하도록 구현된 스트림    
        - FileReader, FileWriter, 
          BufferedReader, BufferedWriter

5. 기반 스트림 / 보조 스트림 
    1) 기반 스트림 
        - 대상에 직접 자료를 읽고 쓰는 기능의 스트림
        - FileInputStream, FileOutputStream, 
          FileReader, FileWriter
    2) 보조 스트림
        - 직접 읽고 쓰는 기능은 없이 추가적인 기능을 더해주는 스트림   
        - InputStreamReader, OutputStreamWriter, 
          BufferedInputStream, BufferedOutputStream
    3) 보조 스트림은 직접 읽고 쓰는 기능은 없으므로
       항상 기반 스트림이나 또 다른 보조 스트림을 생성자의 매개변수로 포함함.   
       - 기반 스트림 + 보조 스트림A + 보조 스트림B  

6. 표준 입출력 스트림
    1) System.out 
        - 표준 출력(모니터) 스트림 
        - System.out.println("출력 메세지");
    2) System.in
        - 표준 입력(키보드) 스트림
        - int d = System.in.read() // 한 바이트 읽기
    
7. 바이트 단위 스트림
    1) InputStream  
        - 바이트 단위 입력 스트림으로서 최상위 추상 클래스   
        - 이를 하위 스트림이 상속받아 구현함
            - FileInputStream
                - 파일에서 바이트 단위로 자료를 읽음
        - 주요 메서드
            - int read() 
                - 입력 스트림으로부터 한바이트의 자료를 읽음
                - 읽은 자료의 바이트 수를 반환
            - int read(byte[] b)
                - 입력 스트림으로부터 b[] 크기의 자료를 b[]에 읽음
                - 읽은 자료의 바이트 수를 반환
            - int read(byte[] b, int off, int len)
                - 입력 스트림으로부터 b[] 크기의 자료를 b[]의
                  off변수 위치부터 저장하며 len만큼 읽음
                - 읽은 자료의 바이트 수를 반환
            - void close()
                - 입력 스트림과 연결된 대상 리소스를 닫음     

    2) OutputStream
        - 바이트 단위 출력 스트림 최상위 추상 클래스
        - 많은 추상 메서드가 선언되어 있고, 
          이를 하위 스트림이 상속받아 구현함 
        - 주요 메서드
            - void write(int b)
                - 한바이트 출력함
            - void write(byte[] b)
                - b[] 크기의 자료를 출력함
            - void write(byte[] b, int off, int len)    
                - b[] 배열에 있는 자료의 off위치부터 len 개수만큼
                  자료를 출력함
            - void close()
                - 출력 스트림과 연결된 대상 리소스 닫음
                - 출력 버퍼가 지워짐
            - void flush()
                - 출력을 위해 잠시 자료가 머무르는 출력 버퍼를
                  강제로 비워 자료를 출력함      

8. 문자 단위 스트림
    1) Reader
        - 문자 단위 입력 스트림 최상위 추상 클래스
        - 많은 추상 메서드 선언됨, 이를 하위 스트림이 상속받아 구현함
        - 주요 메서드
            - int Read() 
                - 한 문자를 읽음, 읽은 문자를 반환함
            - int read(char[] cbuf)  
                - cbuf[] 배열에 문자를 읽음
            - abstract int read(char[] cbuf, int off, int len)  
                - cbuf[] 배열의 off위치로부터 len개수만큼의 문자를 읽음    
            - abstract void close() 
                - 입력 스트림과 연결된 대상 리소스를 닫음

    2) writer
        - 문자 단위 출력 스트림 최상위 추상 클래스 
        - 이를 하위 스트림이 상속받아 구현함
        - 주요 메서드         
            - void write(int c)
                - 한 문자를 출력함
            - void write(char[] cbuf)    
                - 문자 배열의 cbuf의 내용을 출력함
            - abstract void write(char[] cbuf, int off, int len)    
                - 문자 배열의 cbuf의 off위치부터 len개수의 문자를 출력 
            - void write(String str)    
                - 문자열 str을 출력함
            - void write(String str, int off, int len)    \
                - 문자열 str의 off번째 문자로부터 len개수만큼 출력함
            - abstract void flush()     
                - 출력하기 전에 자료가 있는 공간(출력 버퍼)을 비워 출력하도록 함
            - abstract void close()    
                - 스트림과 연결된 리소스를 닫음. 출력 버퍼도 비워짐.

9. 보조 스트림
    1) 실제 읽고 쓰는 스트림이 아닌 보조 기능을 제공하는 스트림
    2) FilterInputStream, FilterOutputStream 이 보조 스트림의 상위클래스들
    3) 생성자의 매개변수로 또 다른 스트림(기반 스트림이나 다른 보조 스트림)을 가짐
        - protected FilterInputStream(InputStream in)
            - 생성자의 매개변수로 InputStream울 받음
    4) Decorator Pattern으로 구현 됨 
        - 
            바이트 단위 파일 입력 스트림 + 문자로 변환 기능 추가 + 버퍼링 기능 추가
            ---------------------------   ---------------------  ----------------          
                기반 스트림                   보조 스트림           보조 스트림   
    5) InputStreamReader, OutputStreamWriter
        - 바이트 단위로 읽거나 쓰는 자료를 문자로 변환해주는 보조 스트림

    6) BufferedInputStream, BufferedOutputStream
        - 약 8kb의 배열이 제공되어 입출력이 빠르게하는 기능이 제공되는 보조 스트림
        - BufferedReader, BufferedWriter 
            - 문자용 입출력 보조 스트림

10. File 클래스
    1) 파일 개념을 추상화한 클래스
    2) 입출력 기능은 없고, 파일의 이름, 경로, 읽기 전용 등의 속성을 알수있음
        - 이를 지원하는 여러 메서드들이 제공됨

11. Decorator Pattern
    1) 자바의 입출력 스트림은 Decorator Pattern임.
    2) 여러 Decorator들을 활용하여 다양한 기능을 제공
    3) 상속보다 유연한 구현 방식
    4) 데코레이터는 다른 데코레이터 또는 컴포넌트를 포함해야 함
    5) 지속적인 기능의 추가와 제거가 용이함
    6) 예) 
        아메리카노 (컴포넌트) 
        아메리카노 + 우유 = 카페 라떼
        아메리카노 + 우유 + 모카시럽 = 카페모카
        아메리카노 + 우유 + 모카시럽 + 크림 = 크림 올라간 카페모카
                    ----    -------   ----
                    (데코레이터)

        