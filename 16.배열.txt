0. 자료 구조
    1) 대량 데이터를 효율적으로 관리하는 메커니즘
        - 우편 번호
        - 인사지원부를 통한 인원 관리 

1. (1차원) 배열
    1) 동일한 자료형 여러 개의 값을 함께 저장할수 있는 자료 구조        
    2) 동일한 자료형의 순차적 자료 구조
    3) 자료를 순차적으로 한꺼번에 관리하는 방법 제공
    4) 물리적 위치와 논리적 위치가 동일
    5) 배열의 순서는 0부터 시작
    6) 자바에서 객체 배열을 구현한 ArrayList를 많이 사용함  
    7) 배열의 문제점
        - 저장할 수 있는 객체 수가 배열을 생성할때 결정(정적)
        - 불특정 다수의 객체를 저장하기에는 문제점이 있음

2. 배열 선언과 초기화, 사용하기
    1) 자료 한개 저장하는 공간을 위한 변수 사용
        int num =0; 

    2) 자료형[] 변수명 = new 자료형[개수];
       자료형 변수명[] = new 자료형[개수]; 

    3) 기본 자료형 배열
    4) 객체 배열
    5) [ ] 인덱스 연산자 활용
        - 배열 요소가 저장된 메모리의 위치를 연산하여 찾아줌
    6) 배열의 길이와 요소의 개수는 동일하지 않음
        - 배열을 선언하면 개수만큼 메모리가 할당됨,
          실제 요소(데이터)가 없는 경우도 있음   
          - length 활용시 오류가 나는 경우. 

3. 향상된 for문 사용하기
    1) 배열의 n개 요소를 0부터 n-1때까지 순차적으로 순회할때
       간단하게 사용할수 있음

       for(변수 : 배열){

       }

4. main() 메서드의 매개변수 
    1) 개발자가 직접 호출하는 메서드는 아님
    2) JVM이 프로그램 실행할 때 불리는 메서드임.   

5. 객체 배열 복사하기
    1) system.arraycopy(Object src, int srcPos, Object dest,
                     int destPos, int length)
        - 얕은 복사 
            - 객체 주소만 복사되어 한쪽 배열의 요소를 수정하면 같이 수정 됨
            - 즉 두 배열이 같은 객체를 가리킴               

        - 깊은복사
            - 각각의 객체를 생성하여 그 객체의 값을 복사하여
              배열이 서로 다른 객체를 가리키도록 함 

6. 2차원 배열 
    1) 다차원 배열
        - 이차원 이상으로 구현 된 배열
        - 평면(이차원 배열)이나 공간(삼차원 배열)을 활용한 프로그램 구현

    2)  자료형  배열이름    행   열
        ---     ---        ---  ---
        int[][] arr = new int[2][3];    

7. ArrayList 
    1) 기존의 배열 선언과 사용 방식은 배열의 길이를 정하고
       요소의 개수가 배열의 길이보다 커지면 
       배열을 재할당하고 복사해야 했음
        - 배열의 요소를 추가하거나 삭제하면 다른 요소들의 이동에 대한
          구현을 해야 함
    2) ArrayList는 객체 배열을 좀더 효율적으로 관리하기 위해
       자바에서 제공해 주는 클래스
       - 최적의 알고리즘으로 구현되어 있어
         각 메서드의 사용 방법만 익히면 유용하게 사용할수 있음.
    3) 주요 메서드
        - boolean add(E e) : 요소 하나를 배열에 추가함.
                             E는 요소의 자료형을 의미함.
        - int size() : 배열에 추가된 요소 전체 개수를 반환함.
        - E get(int index) : 배열의 index 위치에 있는 요소값을 반환함
        - E remove(int index) : 배열의 index 위치에 있는 요소값 제거함
                                그 값을 반환함
          boolean isempty() : 배열이 비어 있는지 확인함                                                          