1. 객체와 클래스
    1)  클래스 
        - 객체의 청사진이다.
        - 객체를 만들어내기 위한 일종의 템플릿 
        - '실체화' 되어 있지 않으므로 메모리에 존재하지 않음
    2)  클래스는 객체를 프로그래밍에서 사용하려고
        추상화해서 기술해놓은 설계도임.
    3)  프로그래밍에서 사용하려면 설계도(클래스) 를 기초로
        실체(객체)를 만들 필요가 있음.
        -   실체화된 것을 객체(인스턴스)라고 함
        -   실체화하는 작업을 객체(인스턴스)를 생성한다고 함.
    4)  클래스라는 설계도대로 구현한 것을 메모리에 탑재해
        메모리 주소를 부여한것이 그게 객체임.
        - 객체는 클래스로부터 만들어지며 메모리를 차지함
        - 최초에 만들어질 때는 자신을 초기화하는 '생성자(constructor)'를 가짐
    
    5)  실제로 클래스를 객체로 만드는 코드는 아래와 같음
        
        클래스 타입         객체 생성
        -------             ---
        Student myStudent = new Student();     
                ---------       ----------
                (참조)변수       생성자

        -   Student 클래스의 Student() 생성자를 이용해서 
            new해서(새로 만들어서) 생성된 객체를
            메모리에 적재하고 변수 myStudent에 대입시킴.
        -   new 키워드
            - 객체가 생성되면 그 객체는 참조형이되어
              동적메모리 할당 공간(Heap)에 내용을 사용할수 있음.

    6)  this : 객체 자기자신의 주소  
        super : 조상객체의 주소   

    7) 인스턴스 (Instance)
        - 클래스는 객체의 속성을 정의하고, 기능을 구현하여
          만들어 놓은 코드 상태
        - 실제 클래스 기반으로 생성된 객체(인스턴스)는 각각
          다른 멤버 변수 값을 가지게 됨.
        - new 키워드를 사용하여 인스턴스 생성
        - 생성된 인스턴스는 동적 메모리 (heap memory)에 할당됨.
        - 자바에서 Garbage Collectorrk가 주기적으로 사용하지 않는
          메모리를 수거함
        - 하나의 클래스로부터 여러 개의 인스턴스가 생성되고
          각각 다른 메모리 주소를 가지게 됨.                 

2. 함수와 메서드 
    1) 함수 (function)
        - 하나의 기능을 수행하는 일련의 코드
        - 구현된(정의된) 함수는 호출하여 사용하고
          호출된 함수는 기능이 끝나면 제어가 반환됨
        - 함수로 구현된 하나의 기능은 여러 곳에서 동일한 방식으로
          호출되어 사용될 수 있음 

    2) 매서드 (method)
        - 객체의 기능을 구현하기 위해 클래스 내부에 구현되는 함수
        - 멤버 함수 (member function) 라고도 함
        - 메서드 이름은 그 객체를 사용하는 객체(클라이언트)에 맞게
          짓는 것이 좋음
            - 예) getStudentName()

    3) 오버로딩(overloading)
        - 하나의 클래스 내에 매개변수 개수나 자료형은 다르지만 
          메서드명은 같은 메서드를 여러개 정의 하는 것.
        - 동일 하거나 유사한 일을 수행하는 메서드가 
          전달받는 매게변수에 따라 다른 연산을 하는 경우에 유용함.    

3. OOP 3가지 개념
    1) 캡슐화(Encapsulation)
        - 정보를 하나로 묶어주는 것
            - 예) 클래스 (속성과 동작을 묶어놓음)
    2) 추상화(Abstraction)
        - 시스템의 세부사항 중에서 중요한(관심 있는) 것과 
          중요하지 않은 (관심 없는) 것을 가려내는 과정
    3) 정보은폐(Information Hiding)
        - 사용자가 알 필요없는 정보를 감추기

4. 정보 은폐와 가시성
    1) - (private) : 
        나만 볼수 있는 것
        같은 클래스 내부에서만 접근 가능
        접근 제한을 했더라도 해당 멤버 변수를 사용할수 있는 
        메서드를 제공해서 프로그램 의도에 맞게 멤버 변수의 값을
        사용하도록 유도할수 있음.
         => setter(세터) : private 멤버변수에 값을 대입하는 메서드.
            getter(게터) : 값을 가져오는 메서드.

       + (public) : 누구나 접근 가능 
                    외부 클래스 어디에서나 접근 가능
       # (protrcted) : 부모와 자식에게만 접근 가능
                       상속 관계의 클래스에서만 접근 가능
       (아무것도 표시안함) : 디폴트 
                             같은 패키지 내부에서만 접근 가능      
    
    2) get()/ set() 메서드
        - private으로 선언된 멤버 변수(필드)에 대해 접근,수정할수
          있는 메서드를 public으로 제공
        - get() 메서드만 제공되는 경우 read-only 필드
        - 이클립스에서 자동으로 생성됨  

    3) 객체지향 프로그램에서 정보은닉은
       외부의 접근 가능한 최소한의 정보를 오픈함
       - 객체 사용의 오류를 방지하고, 
         클라이언트 객체가 더 효율적으로 객체를 활용할수 있도록 함.                                    

5. 변수의 자료형
    1) 기본 자료형 : int, long, float, double 등
    2) 참조 자료형
        - 클래스형으로 변수를 선언
        - 기본 자료형은 사용하는 메모리의 크기가 정해져 있지만,
          참조 자료형은 클래스에 따라 다름
        - 예)
         - 학생이 수강한 과목들에 대한 성적을 산출하기 위한 경우
            - 학생 클래스에 과목이 모두 있으면 불합리적인 설계 
            - 학생(Sudent)과 과목(Subject) 클래스 분리하여 사용하는 설계
                - Student클래스에 Subject 클래스를 활용한 변수 타입으로 선언           

6. 객체간의 협력 (collabration)
    1) 참조 자료형 정의하여 사용하기
      - 예) 
        - 학생이 수강한 과목들에 대한 성적을 산출하기 위한 경우
        - 학생(Student)과 과목(Subject)에 대한 클래스를 분리하여 사용
          - Subject 클래스를 활용하여 수강한 과목들의 변수 타입으로 선언.

    2) OOP에서의 협력
        - 객체간의 협력이 이루어짐
        - 협력을 위해서는 필요한 메세지를 전송하고
          이를 처리하는 기능이 구현되어야 함
        - 매개변수로 객체가 전달되는 경우가 발생  

    3) 시나리오1
      - 이순신과 신사임당은 각각 버스와 지하철을 타고 학원에 간다.
      - 이순신은 10000원을 가지고 있었고, 
                      100번 버스를 타면서 1250원을 지불한다.
      - 신사임당은 50000원을 가지고 있었고, 
                      9호선 지하철를 타면서 1300원을 지불한다.                
      - 두 학생이 버스와 지하철을 타는 상황을 구현하시오. 

    4) 시나리오2
      - 진도준은 지각을 해서 택시를 타야 했다.
        20000원을 가지고 있었는데 10000원을 택시비로 사용했다.
        택시는 '이젠운수' 회사 택시를 탔다.

      - 진도준님의 남은 돈은 10000원 입니다.
        이젠 운수택시 수입은 10000원 입니다.       