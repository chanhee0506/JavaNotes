1. 프로그래밍 방법론 
    1) 절차식 프로그래밍
        - 초기의 컴퓨터 언어는 순차적인 명렬을 수행하고
          간단한 분기만 가능
    2) 구조적 프로그래밍
        - 특정 변수를 묶어 구조화 하고 이를 통해
          프로그래밍 효율을 높임
    3) 객체지향 프로그래밍 
        - 객체를 기반으로 프로그래밍되며 클래스(Class), 속성,
          동작등의 현실세계의 모델을 반영함
    4) 함수형 프로그래밍
        - 객체의 형태를 벗어나 함수형을 확장해
          함수를 변수처럼 사용 가능

2. 컴퓨터 관점에서의 객체 (Object)
    1) 실 세계(Real-world)
        - 객체는 어떤 상태(status) 혹은 값(variable) 이나
          행동(Behavior)을 가지고있음.
    2) 컴퓨터 세계 
        - 특정 일을 수행하기 위한 변수와 기능(Function)으로 이루어진
          작은 프로그램의 집합체로
          컴퓨터 메모리에 상주하며 필요시 사용됨.
        - 객체는 변수(variable)와 함수, 즉 프러퍼티와 
          메서드(Method)를 가지고 있으며 
          메모리에 생성된 상태임
        - 인스턴스(Instance)라고도 부름.    

3. 객체지향 프로그램의 장점
    1) C, ASM
        - 빨리 만들어서 한정된 시간안에 요구기능을 구현
        - 단 기능을 변경, 재사용이 어려움
        - 저수준 언어 및 절차지향
    2) Java, C++, Python, kotlin 등
        - 빨리 만드는 것보다 요구사항 변경에 유연하게
          대처하고 기능 변경, 재사용을 쉽게 하기 위한 것
        - 고수준 및 객체 지향 기법   

4. 객체와 객체지향 프로그래밍 
    (Object Oriented Programming, OOP)
    1) 객체 (object)
        - 구체적 데이터의 단위 (물리적인 객체)
            - 예) 개, 고양이, 호랑이, 학생, 회원, 차....
        - 추상적 데이터의 단위 (개념적인 객체)
            - 예) 주문, 배송, ....

    2) 절차 지향 프로그래밍 & 객체지향 프로그래밍   
        - 절차 지향 프로그래밍
            - 시간이나 사건의 흐름에 따른 프로그래밍
                -일어난다 -> 씻는다 -> 밥을 먹는다 ->
                버스를 탄다 -> 요금을 지불한다 ->
                학원에 도착한다.
        - 객체  지향 프로그래밍
                       
                        먹는다
            훈련생 <------------------> 밥
           /|\  
            |
       탄다 |           간다
            |
           \|/
            버스                        학원                    
            - 객체를 정의 (클래스로 구현)
            - 각 객체 제공하는 기능들을 구현하고
            - 각 개체가 제공하는 기능들 간의 메세지 전달을
              통하여 객체간의 협력을 구현
        - 객체 예
            - 온라인 쇼핑몰에 회원 로그인을 하고 
              여러 판매자가 판매하고 있는 제품 중
              하나를 골라 주문을 한다 
            - 아침에 학원에 가는 길에 은다방에 들려서
              아아를 주문한다
            - 성적확인을 위해 학사관리 시스템에 
              로그인하여 수강 한 과목들의 성적을 확인한다    

5. 클래스(Class)
    1) 어떤 부류, 등급, 종류, ...을 분류하다, 분류되다.
    2) 일종의 개념으로 사용하는 청사진(BluePrint)임
        - 템플릿, 틀, 고푸집, 설계도
    3) 객체와 관련된 데이터와 처리 동작을 한게 모은 
       코드 뭉치임
    4) 어느정고 특징적인 데이터와 동작으로 추려낼 필요는 있음
        - 추려내는 과정을 추상화(Abstraction), 일반화라고 부름.

        - 객체                                          클래스(추상화)
          탈것   이륜       자전거, 오토바이            Bike
                 자동차     승용차, 버스, 트럭          car
                 운송수단   자동차, 비행기, 배          vehicle

    5) 일종의 사용자가 정의한 형식(Type)으로 개념일 뿐이며
       객체를 통해서 메모리에 할당될때 비로소 사용가능.
    6) 명사적인 특징을 뽑아내는 추상화 과정
        => 멈버 변수(필드) 추출  
       동사적인 특징을 뽑아내는 추상화 과정
        => 멤버 함수(메서드) 추출             

            