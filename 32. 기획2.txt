1. 요구사항 정의서 (PRD)
    1) Product Requirements Document
    2) '왜 서비스를 만들어야 하는가?'
    3) 개요
        - 문제 정의
        - 목적 및 배경
        - 주요 사용자(고객)
        - 사용자가 얻게 될 가치
    4) 구체적인 요구사항 기술, WBS, FAQ    

2. 프로젝트 일정 관리(WBS)
    1) Work Breakdown Structure
    2) 업무 일정을 계획하고 관리할수 있는 기초 문서
    3) 프로젝트 전체 업무를 더 작고 관리하기 쉬운 작은 요소로 세분화

3. 정보구조도 (IA)    
    1) Infomation Architecture
    2) UX 용어
    3) 사이트맵 형식을 구체화한 문서
    4) 화면의 상하구조 파악에 도움을 줌

4. 와이어프레임
    1) 화면 설계서 
    2) Wire(선)을 이용해서 Frame(윤곽)을 잡는 것
    3) 디자이너, 개발자 등과 의사소통을 위한 수단임
    4) figma 

5. 스토리보드
    1) 상세기획서
    2) 서비스기획 문서의 최종 산출물
    3) 화면설계서
    4) 최종적으로 유관부서에게 공유하는 문서
    5) 구성요소
        - 서비스 개요(목표, 주요기능)
        - 서비스 구성
            - IA, 서비스 정책
            - 주요 서비스 프로세스
        - 상세 기획
            - 화면(UI) 시나리오
            - 화면별 와이어프레임 + 기능 상세설명

6. 소프트웨어 개발 주기 
    1) 소프트웨어를 개발하고 관리하는 데에 있어 가장 근간이 되는
       프로세스 
    2) 실무에서도 소프트웨어 개발 주기를 기반으로 프로젝트를 진행
    3) SDLC (Software Development Life Cycle)

7. SDLC
    1) 기획
        - 요구사항을 수집하고 프로젝트를 기획하는 단계
            - 사용자 설문, 마케팅 요구사항 등 다양한 채널을 통해
              데이터를 모으는 과정
            - 가장 중요하면서도 기초가 되는 단계
    
    2) 분석
        - 제품의 요구사항을 정의하는 단계
        - SRS (Software Requirement Specification)에 기록
            - 디자인 / 구현해야 할 소프트웨어의 모든 요구사항을
              기록해 둔 명세서       
    
    3) 디자인
        - 시스템 디자인하고 설계하는 단계 

    4) 구현
        - 디자인을 기반으로 개발자가 코드로 기능을 구현하는 단계

    5) 테스팅 및 배포
        - 구현 내용이 요구 사항을 충족하는지 검증하는 단계        

    6) 유지 보수
        - 제품을 마켓에 배포하고 서비스를 모니터링 하면서 유지보수 하는 단계

8. 소프트웨어 개발 방법론
    1) Waterfall
        - SDLC의 주기를 한 사이클만 돔
        - 요즘 이 모델을 사용하는 회사는 거의 없음
    2) Agile
        - 등장 배경
            - 소프트웨어의 요구사항은 개발 도중 자주 변경 됨
            - 변경된 요구사항의 따른 작업량을 예측하기 힘듦
            - 제한된 시간과 비용 안에서 정보는 불완전하고
              예측은 불가능하다는 전제를 가짐
                - 그 전제 안에서 합리적인 답을 내는 것이
                  애자일 개발 프로세스
        - 일정한 주기를 가지고 프로토타입을 만들어내며
          그때 그때 필요한 요구를 더하고 수정하여
          소프트웨어 개발해 나가는 실용적인 스타일 

        - 종류
            - Extreme Programming (a.k.a XP)
            - Scrum
                - Sprint 목표를 달성하는 것에 촛점을 둔 프로세스
                - 2~4주 단위의 스프린트를 운영
                - planning 미팅
                    - product Backlog에서 Sprint 기간 동안
                      할수 있는 일을 팀원들끼리 결정하고 할당함
                - Daily Scrim
                    - 매일 팀원들끼리 모여 전날 어떤 일을 했는지,
                      오늘 어떤 일을 할 것인지 간단하게 공유.
                    - 보통 15분 내외    
                - 회고 미팅
                    - 스프린트가 끝난 후 팀원들끼리 모여
                      스프린트에서 잘 된것들, 개선되면 좋은 것들을
                      논의해서 다음 스프린트에 반영할수 있도록,
                      협업을 더 잘하기 위한 시간.
                    - 보통 1시간 내외                     